datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?

  cart      Cart?
  orders    Order[]  // Add this relation

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String  @id @default(cuid())
  name        String
  description String? @db.Text
  price       Float
  imageUrl    String?
  stock       Int     @default(0)

  cartItems   CartItem[]
  orderItems  OrderItem[]  // Add this relation

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique

  items     CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(cuid())
  quantity  Int

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, cartId])
}

enum OrderStatus {
  PENDING
  SUCCESS
  FAILED
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  user            User        @relation(fields: [userId], references: [id])
  totalAmount     Float
  status          OrderStatus @default(PENDING)
  paymentToken    String?     @unique
  paymentRedirectUrl String?  @db.Text

  items           OrderItem[]

  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id])
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float // Harga produk saat order dibuat

  createdAt DateTime @default(now())
}